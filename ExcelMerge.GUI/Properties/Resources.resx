<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Button_ExtractDiff" xml:space="preserve">
    <value>Extract Diff</value>
  </data>
  <data name="Label_SkipFirstBlankRows" xml:space="preserve">
    <value>Skip first blank rows</value>
  </data>
  <data name="MenuItem_ExeExternalCmd" xml:space="preserve">
    <value>Execute external command</value>
  </data>
  <data name="MenuItem_ExternalCommands" xml:space="preserve">
    <value>External Commands</value>
  </data>
  <data name="MenuItem_GeneralSetting" xml:space="preserve">
    <value>General Setting</value>
  </data>
  <data name="MenuItem_OpenAsDstFile" xml:space="preserve">
    <value>Open as Dst File</value>
  </data>
  <data name="MenuItem_OpenAsSrcFile" xml:space="preserve">
    <value>Open as Src File</value>
  </data>
  <data name="MenuItem_OpenDstFile" xml:space="preserve">
    <value>Open dst File</value>
  </data>
  <data name="MenuItem_OpenSrcFile" xml:space="preserve">
    <value>Open src file</value>
  </data>
  <data name="MenuItem_RecentFiles" xml:space="preserve">
    <value>Recent Files</value>
  </data>
  <data name="MenuItem_RecentFileSets" xml:space="preserve">
    <value>Recent File Sets</value>
  </data>
  <data name="Message_Reboot" xml:space="preserve">
    <value>Please restart to apply the changes.</value>
  </data>
  <data name="Title_ExternalCommandEditorWindow" xml:space="preserve">
    <value>Edit External Command</value>
  </data>
  <data name="Title_ExternalCommandsWindow" xml:space="preserve">
    <value>External Commands</value>
  </data>
  <data name="Title_GeneralSettingWindow" xml:space="preserve">
    <value>General Settings</value>
  </data>
  <data name="ToolTip_DstFilePath" xml:space="preserve">
    <value>Dst File Path</value>
  </data>
  <data name="ToolTip_DstSheet" xml:space="preserve">
    <value>Dst Sheet</value>
  </data>
  <data name="ToolTip_SrcFilePath" xml:space="preserve">
    <value>Src File Path</value>
  </data>
  <data name="ToolTip_SrcSheet" xml:space="preserve">
    <value>Src Sheet</value>
  </data>
  <data name="Word_Apply" xml:space="preserve">
    <value>Apply</value>
  </data>
  <data name="Word_Args" xml:space="preserve">
    <value>Args</value>
  </data>
  <data name="Word_Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Word_Default" xml:space="preserve">
    <value>Default</value>
  </data>
  <data name="Word_Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Word_Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Word_English" xml:space="preserve">
    <value>English</value>
  </data>
  <data name="Word_Executable" xml:space="preserve">
    <value>Executable</value>
  </data>
  <data name="Word_File" xml:space="preserve">
    <value>File</value>
  </data>
  <data name="Word_Japanese" xml:space="preserve">
    <value>Japanese</value>
  </data>
  <data name="Word_Language" xml:space="preserve">
    <value>Launguage</value>
  </data>
  <data name="Word_Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="Word_Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Word_Reset" xml:space="preserve">
    <value>Reset</value>
  </data>
  <data name="Word_Setting" xml:space="preserve">
    <value>Setting</value>
  </data>
  <data name="Word_Tool" xml:space="preserve">
    <value>Tool</value>
  </data>
  <data name="ContextMenu_DiffAsHeader" xml:space="preserve">
    <value>Extract diff with this row as column header.</value>
  </data>
  <data name="ContextMenu_SetRowHeader" xml:space="preserve">
    <value>←Set Row Header</value>
  </data>
  <data name="ContextMenu_ResetRowHeader" xml:space="preserve">
    <value>←Reset Row Header</value>
  </data>
  <data name="ContextMenu_SetColumnHeader" xml:space="preserve">
    <value>↑Set Column Header</value>
  </data>
  <data name="ContextMenu_ResetColumnHeader" xml:space="preserve">
    <value>↑Reset Column Header</value>
  </data>
  <data name="GroupBox_DisplayFormat" xml:space="preserve">
    <value>Display Format</value>
  </data>
  <data name="Label_RowlHeight" xml:space="preserve">
    <value>Row Height</value>
  </data>
  <data name="Label_ColumnWidth" xml:space="preserve">
    <value>Column Width</value>
  </data>
  <data name="RadioButton_ShowAll" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="RadioButton_ShowOnlyDiff" xml:space="preserve">
    <value>Only Diff</value>
  </data>
  <data name="ToolTip_Swap" xml:space="preserve">
    <value>Swap src and dst</value>
  </data>
  <data name="Word_Path" xml:space="preserve">
    <value>Path</value>
  </data>
  <data name="Word_Sheet" xml:space="preserve">
    <value>Sheet</value>
  </data>
  <data name="Word_DstFile" xml:space="preserve">
    <value>Dst File</value>
  </data>
  <data name="Word_SrcFile" xml:space="preserve">
    <value>Src File</value>
  </data>
  <data name="Label_AddedColor" xml:space="preserve">
    <value>Added Color</value>
  </data>
  <data name="Label_ColorModifiedRow" xml:space="preserve">
    <value>Color Modified Row</value>
  </data>
  <data name="Label_RowHeaderColor" xml:space="preserve">
    <value>Row Header Color</value>
  </data>
  <data name="Label_ColumnHeaderColor" xml:space="preserve">
    <value>Column Header Color</value>
  </data>
  <data name="Label_ModifiedColor" xml:space="preserve">
    <value>Modified Color</value>
  </data>
  <data name="Label_ModifiedRowColor" xml:space="preserve">
    <value>Modified Row Color</value>
  </data>
  <data name="Label_RemovedColor" xml:space="preserve">
    <value>Removed Color</value>
  </data>
  <data name="Label_RowColor" xml:space="preserve">
    <value>Row Colors</value>
  </data>
  <data name="Label_SkipFirstBlankColumns" xml:space="preserve">
    <value>Skip first blank columns</value>
  </data>
  <data name="Label_TrimLastBlankColumns" xml:space="preserve">
    <value>Trim last blank columns</value>
  </data>
  <data name="Label_TrimLastBlankRows" xml:space="preserve">
    <value>Trim last blank rows</value>
  </data>
  <data name="Label_AddedRows" xml:space="preserve">
    <value>Added Rows({0})</value>
  </data>
  <data name="Label_ModifiedCells" xml:space="preserve">
    <value>Modified Cells({0})</value>
  </data>
  <data name="Label_ModifiedRows" xml:space="preserve">
    <value>Modified Rows({0})</value>
  </data>
  <data name="Label_RemovedRows" xml:space="preserve">
    <value>Removed Rows({0})</value>
  </data>
  <data name="Word_CaseSensitive" xml:space="preserve">
    <value>CaseSensitive</value>
  </data>
  <data name="Word_ExactMatch" xml:space="preserve">
    <value>ExactMatch</value>
  </data>
  <data name="Word_Regex" xml:space="preserve">
    <value>Regex</value>
  </data>
  <data name="Word_Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="MenuItem_FileSettings" xml:space="preserve">
    <value>File Settings</value>
  </data>
  <data name="Title_FileSettingEditorWindow" xml:space="preserve">
    <value>Edit File Setting</value>
  </data>
  <data name="Title_FileSettingsWindow" xml:space="preserve">
    <value>File Settings</value>
  </data>
  <data name="Word_RowHeaderIndex" xml:space="preserve">
    <value>Row Header Index</value>
  </data>
  <data name="Word_ColumnHeaderIndex" xml:space="preserve">
    <value>Column Header Index</value>
  </data>
  <data name="Word_MatchType" xml:space="preserve">
    <value>Match Type</value>
  </data>
  <data name="Word_Font" xml:space="preserve">
    <value>Font</value>
  </data>
  <data name="Word_MaxRowHeaderWidth" xml:space="preserve">
    <value>Max Row Header Width</value>
  </data>
  <data name="Msg_ExtractingDiff" xml:space="preserve">
    <value>Extracting Diff ...</value>
  </data>
  <data name="Msg_ReadingFiles" xml:space="preserve">
    <value>Reading Files ...</value>
  </data>
  <data name="Msg_WarnSize" xml:space="preserve">
    <value>There are too many records. Display only around diff.</value>
  </data>
  <data name="Word_RowHeaderName" xml:space="preserve">
    <value>Row Header Name</value>
  </data>
  <data name="ContextMenu_BuildCellBaseLog" xml:space="preserve">
    <value>Output Log</value>
  </data>
  <data name="ContextMenu_BuildColumnBaseLog" xml:space="preserve">
    <value>Build Column Base Log</value>
  </data>
  <data name="ContextMenu_BuildRowBaseLog" xml:space="preserve">
    <value>Build Row Base Log</value>
  </data>
  <data name="DefaultLogFormat" xml:space="preserve">
    <value>Changed "${ROW}"'s "${COL}" to "${RIGHT}" from "${LEFT}"</value>
  </data>
  <data name="DefaultColumnBaseLogFormat" xml:space="preserve">
    <value>${LEFT} → ${RIGHT}</value>
  </data>
  <data name="DefaultRowBaseLogFormat" xml:space="preserve">
    <value>${LEFT} → ${RIGHT}</value>
  </data>
  <data name="Label_LogFormat" xml:space="preserve">
    <value>Modified Cell Log Format</value>
  </data>
  <data name="Label_ColumnBaseLogFormat" xml:space="preserve">
    <value>Column Base Log Format</value>
  </data>
  <data name="Label_RowBaseLogFormat" xml:space="preserve">
    <value>Row Base Log Format</value>
  </data>
  <data name="MenuItem_Console" xml:space="preserve">
    <value>Console</value>
  </data>
  <data name="MenuItem_View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="Msg_Undisplayable" xml:space="preserve">
    <value>Not be displayed</value>
  </data>
  <data name="Shortcut_Ctrl_Down" xml:space="preserve">
    <value>Ctrl + Down</value>
  </data>
  <data name="Shortcut_Ctrl_I" xml:space="preserve">
    <value>Ctrl + I</value>
  </data>
  <data name="Shortcut_Ctrl_K" xml:space="preserve">
    <value>Ctrl + K</value>
  </data>
  <data name="Shortcut_Ctrl_L" xml:space="preserve">
    <value>Ctrl + L</value>
  </data>
  <data name="Shortcut_Ctrl_Left" xml:space="preserve">
    <value>Ctrl + Left</value>
  </data>
  <data name="Shortcut_Ctrl_O" xml:space="preserve">
    <value>Ctrl + O</value>
  </data>
  <data name="Shortcut_Ctrl_Right" xml:space="preserve">
    <value>Ctrl + Right</value>
  </data>
  <data name="Shortcut_Ctrl_Up" xml:space="preserve">
    <value>Ctrl + Up</value>
  </data>
  <data name="Shortcut_F8" xml:space="preserve">
    <value>F8</value>
  </data>
  <data name="Shortcut_F9" xml:space="preserve">
    <value>F9</value>
  </data>
  <data name="Word_Blank" xml:space="preserve">
    <value>Blank</value>
  </data>
  <data name="DefaultLogFormatAddedRow" xml:space="preserve">
    <value>"${ROW}" was added.</value>
  </data>
  <data name="DefaultLogFormatRemovedRow" xml:space="preserve">
    <value>"${ROW}" was removed.</value>
  </data>
  <data name="Label_AddedRowLogFormat" xml:space="preserve">
    <value>Added Row Log Format</value>
  </data>
  <data name="Label_RemovedRowLogFormat" xml:space="preserve">
    <value>Removed Row Log Format</value>
  </data>
  <data name="Label_IgnoreFileSetting" xml:space="preserve">
    <value>Ignore File Setting</value>
  </data>
  <data name="Msg_OutofSheetRange" xml:space="preserve">
    <value>Sheet index of the applied file settings is out of range.
Will use first sheet.
If you don't want to apply file settings, enable "Ignore File Setting".</value>
  </data>
  <data name="Word_SheetIndex" xml:space="preserve">
    <value>Sheet Index</value>
  </data>
  <data name="Word_SheetName" xml:space="preserve">
    <value>Sheet Name</value>
  </data>
  <data name="Word_StartupSheet" xml:space="preserve">
    <value>Set as Startup Sheet</value>
  </data>
  <data name="GroupBox_LogFormat" xml:space="preserve">
    <value>Log Format</value>
  </data>
  <data name="GroupBox_ReadSetting" xml:space="preserve">
    <value>Read Setting</value>
  </data>
  <data name="GroupBox_Style" xml:space="preserve">
    <value>Style</value>
  </data>
  <data name="Label_NotifyEqual" xml:space="preserve">
    <value>Show dialog if no diff</value>
  </data>
  <data name="Message_NoDiff" xml:space="preserve">
    <value>There is no difference.</value>
  </data>
  <data name="GroupBox_Behavior" xml:space="preserve">
    <value>Behavior</value>
  </data>
  <data name="Label_AlwaysExpandCellDiff" xml:space="preserve">
    <value>Always expand cell diff</value>
  </data>
  <data name="Label_FitRowHeight" xml:space="preserve">
    <value>Fit Cell Height</value>
  </data>
  <data name="Label_MaxRowHeight" xml:space="preserve">
    <value>Max Row Height</value>
  </data>
  <data name="Label_MinRowHeight" xml:space="preserve">
    <value>Min Row Height</value>
  </data>
  <data name="Label_FocusFirstDiff" xml:space="preserve">
    <value>Focus first diff when extracted</value>
  </data>
  <data name="ContextMenu_CopyAsCsv" xml:space="preserve">
    <value>Copy as CSV</value>
  </data>
  <data name="ContextMenu_CopyAsTsv" xml:space="preserve">
    <value>Copy as TSV</value>
  </data>
  <data name="ContextMenu_SaveAll" xml:space="preserve">
    <value>全部保存</value>
  </data>
  <data name="ContextMenu_CopyRowToAnother" xml:space="preserve">
    <value>复制整行到对面</value>
  </data>
  <data name="ContextMenu_CopyToAnother" xml:space="preserve">
    <value>复制到对面</value>
  </data>
  <data name="MenuItem_Merge_NextModifiedRow" xml:space="preserve">
    <value>Next Modified Row</value>
  </data>
  <data name="Word_Merge" xml:space="preserve">
    <value>Merge</value>
  </data>
  <data name="MenuItem_Merge_NextModifiedCell" xml:space="preserve">
    <value>Next Modified Cell</value>
  </data>
  <data name="MenuItem_Merge_NextModifiedColumn" xml:space="preserve">
    <value>Next Modified Column</value>
  </data>
  <data name="MenuItem_Merge_PrevModifiedCell" xml:space="preserve">
    <value>Previous Modified Cell</value>
  </data>
  <data name="MenuItem_Merge_PrevModifiedColumn" xml:space="preserve">
    <value>Previous Modified Column</value>
  </data>
  <data name="MenuItem_Merge_PrevModifiedRow" xml:space="preserve">
    <value>Previous Modified Row</value>
  </data>
  <data name="MenuItem_File_Exit" xml:space="preserve">
    <value>Exit</value>
  </data>
  <data name="MenuItem_Edit_Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="MenuItem_Merge_CopyToLeft" xml:space="preserve">
    <value>Copy To Left</value>
  </data>
  <data name="MenuItem_Merge_CopyToRight" xml:space="preserve">
    <value>Copy To Right</value>
  </data>
</root>