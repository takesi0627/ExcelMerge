<UserControl x:Class="ExcelMerge.GUI.Views.DiffView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:local="clr-namespace:ExcelMerge.GUI.Views"
             xmlns:behavior="clr-namespace:ExcelMerge.GUI.Behaviors"
             xmlns:fg="clr-namespace:FastWpfGrid;assembly=FastWpfGrid"
             xmlns:props="clr-namespace:ExcelMerge.GUI.Properties"
             xmlns:gui="clr-namespace:ExcelMerge.GUI"
             xmlns:vc="clr-namespace:ExcelMerge.GUI.ValueConverters"
             mc:Ignorable="d" 
             Loaded="UserControl_Loaded"
             d:DesignHeight="300" d:DesignWidth="300"
             PreviewKeyDown="UserControl_PreviewKeyDown"
             >

  <Grid>

    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="5*"/>
      <ColumnDefinition Width="5*"/>
      <ColumnDefinition Width="45*"/>
      <ColumnDefinition Width="Auto"/>
      <ColumnDefinition Width="45*"/>
    </Grid.ColumnDefinitions>

    <Grid.RowDefinitions>
      <RowDefinition Height="Auto"/>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

    <Expander x:Name="ToolExpander"
              Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="5"
              Margin="3">
      <Expander.Header>
        <WrapPanel Orientation="Horizontal" Margin="3">

          <Button x:Name="DiffButton" Content="{x:Static props:Resources.Button_ExtractDiff}" 
                  Margin="10,0,0,0" Height="40" Padding="5,5"
                  Click="DiffButton_Click"
                  IsEnabled="{Binding Executable}"/>

          <GroupBox Header="{x:Static props:Resources.GroupBox_DisplayFormat}"
                    Margin="10,0,0,0">
            <StackPanel Orientation="Horizontal">
              <RadioButton x:Name="ShowAllRadioButton" Content="{x:Static props:Resources.RadioButton_ShowAll}"
                           Margin="3"
                           IsChecked="True"
                           Checked="ShowAllRadioButton_Checked"
                           />
              <RadioButton x:Name="ShowOnlyDiffRadioButton" Content="{x:Static props:Resources.RadioButton_ShowOnlyDiff}"
                           Margin="3"
                           IsChecked="False"
                           Checked="ShowOnlyDiffRadioButton_Checked"
                           />
            </StackPanel>
          </GroupBox>

          <!--Src-->
          <GroupBox Header="{x:Static props:Resources.Word_SrcFile}" Margin="10,0,0,0">
            <StackPanel Orientation="Horizontal">
              <Label Content="{x:Static props:Resources.Word_Path}"/>
              <TextBox x:Name="SrcPathTextBox" AcceptsReturn="False" Margin="1"
                       Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=Window}, Converter={vc:PercentageConverter}, ConverterParameter='0.20'}"
                       AllowDrop="True"
                       Text="{Binding SrcPath}"
                       Tag="0">
                <i:Interaction.Behaviors>
                  <behavior:DragAcceptBehavior 
                                            Description="{Binding DataContext. Description,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                </i:Interaction.Behaviors>
              </TextBox>
              <Label Content="{x:Static props:Resources.Word_Sheet}"/>
              <ComboBox x:Name="SrcSheetCombobox" Margin="0,0,5,0" Width="100"
                        ItemsSource="{Binding SrcSheetNames}"
                        SelectedIndex="{Binding SelectedSrcSheetIndex}"
                        />
            </StackPanel>
          </GroupBox>

          <!--Dst-->
          <GroupBox Header="{x:Static props:Resources.Word_DstFile}" Margin="10,0,0,0">
            <StackPanel Orientation="Horizontal">
              <Label Content="{x:Static props:Resources.Word_Path}"/>
              <TextBox x:Name="DstPathTextBox" AcceptsReturn="False" Margin="1"
                       Width="{Binding Path=ActualWidth, RelativeSource={RelativeSource AncestorType=Window}, Converter={vc:PercentageConverter}, ConverterParameter='0.20'}"
                       AllowDrop="True"
                       Text="{Binding DstPath}"
                       Tag="1">
                <i:Interaction.Behaviors>
                  <behavior:DragAcceptBehavior 
                                            Description="{Binding DataContext. Description,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                </i:Interaction.Behaviors>
              </TextBox>
              <Label Content="{x:Static props:Resources.Word_Sheet}"/>
              <ComboBox x:Name="DstSheetCombobox" Margin="5,0,0,0" Width="100"
                        ItemsSource="{Binding DstSheetNames}"
                        SelectedIndex="{Binding SelectedDstSheetIndex}"/>
            </StackPanel>
          </GroupBox>

          <Grid Margin="10,0,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="0" Grid.RowSpan="2" Grid.Column="0" Grid.ColumnSpan="4"/>

            <Label Content="{Binding ModifiedCellCount}" ContentStringFormat="{x:Static props:Resources.Label_ModifiedCells}"
                   Grid.Row="0" Grid.Column="0"
                   HorizontalAlignment="Center"
                   />

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="0" Grid.Column="0"/>

            <Label Content="{Binding ModifiedRowCount}" ContentStringFormat="{x:Static props:Resources.Label_ModifiedRows}"
                   Grid.Row="0" Grid.Column="1"
                   HorizontalAlignment="Center" 
                   />

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="0" Grid.Column="1"/>

            <Label Content="{Binding AddedRowCount}" ContentStringFormat="{x:Static props:Resources.Label_AddedRows}"
                   Grid.Row="0" Grid.Column="2"
                   HorizontalAlignment="Center" 
                   />

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="0" Grid.Column="2"/>

            <Label Content="{Binding RemovedRowCount}" ContentStringFormat="{x:Static props:Resources.Label_RemovedRows}"
                   Grid.Row="0" Grid.Column="3"
                   HorizontalAlignment="Center" 
                   />

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="0" Grid.Column="3"/>

            <Grid Grid.Row="1" Grid.Column="0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Button x:Name="PrevModifiedCellButton" Content="←" Width="30" Grid.Column="0" Margin="3"
                      Click="PrevModifiedCellButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_Left}"
                      />
              <Button x:Name="NextModifiedCellButton" Content="→" Width="30" Grid.Column="1" Margin="3"
                      Click="NextModifiedCellButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_Right}"
                      />
            </Grid>

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="1" Grid.Column="0"/>

            <Grid Grid.Row="1" Grid.Column="1">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Button x:Name="PrevModifiedRowButton" Content="←" Width="30" Grid.Column="0" Margin="3"
                      Click="PrevModifiedRowButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_Up}"
                      />
              <Button x:Name="NextModifiedRowButton" Content="→" Width="30" Grid.Column="1" Margin="3"
                      Click="NextModifiedRowButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_Down}"
                      />
            </Grid>

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="1" Grid.Column="1"/>

            <Grid Grid.Row="1" Grid.Column="2">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Button x:Name="PrevAddedRowButton" Content="←" Width="30"  Grid.Column="0" Margin="3"
                      Click="PrevAddedRowButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_I}"
                      />
              <Button x:Name="NextAddedRowButton"  Content="→" Width="30" Grid.Column="1" Margin="3"
                      Click="NextAddedRowButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_K}"
                      />
            </Grid>

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="1" Grid.Column="2"/>

            <Grid Grid.Row="1" Grid.Column="3">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Button x:Name="PrevRemovedRowButton"  Content="←" Width="30" Grid.Column="0" Margin="3"
                      Click="PrevRemovedRowButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_O}"
                                    />
              <Button x:Name="NextRemovedRowButton"  Content="→" Width="30" Grid.Column="1" Margin="3"
                      Click="NextRemovedRowButton_Click"
                      ToolTip="{x:Static props:Resources.Shortcut_Ctrl_L}"
                      />
            </Grid>

            <Border BorderThickness="0.2" BorderBrush="Gray"
                    Grid.Row="1" Grid.Column="3"/>
          </Grid>


        </WrapPanel>
      </Expander.Header>

      <WrapPanel Orientation="Horizontal" Margin="3">

        <Button x:Name="SwapButton" Content="{x:Static props:Resources.ToolTip_Swap}"
                Height="40"
                Click="SwapButton_Click" Margin="33,0,0,0" Padding="5,5"
                IsEnabled="{Binding Executable}"/>

        <GroupBox Header="{x:Static props:Resources.Word_Search}" Margin="10,0,0,0">
          <StackPanel Orientation="Horizontal">
            <ComboBox x:Name="SearchTextCombobox" Width="200" IsEditable="True" Margin="3"/>
            <CheckBox x:Name="ExactMatchCheckBox" Content="{x:Static props:Resources.Word_ExactMatch}" Margin="3" IsChecked="False"/>
            <CheckBox x:Name="CaseSensitiveCheckBox" Content="{x:Static props:Resources.Word_CaseSensitive}" Margin="3" IsChecked="False"/>
            <CheckBox x:Name="RegexCheckBox" Content="{x:Static props:Resources.Word_Regex}" Margin="3" IsChecked="False"/>
            <Button x:Name="PrevMatchCellButton"  Content="←" Width="30" Grid.Column="0" Margin="3"
                    Click="PrevMatchCellButton_Click"
                    ToolTip="{x:Static props:Resources.Shortcut_F8}"/>
            <Button x:Name="NextMatchCellButton"  Content="→" Width="30" Grid.Column="1" Margin="3"
                    Click="NextMatchCellButton_Click"
                    ToolTip="{x:Static props:Resources.Shortcut_F9}"/>
          </StackPanel>
        </GroupBox>

        <CheckBox x:Name="IgnoreFileSettingCheckbox" Content="{x:Static props:Resources.Label_IgnoreFileSetting}" Margin="3" VerticalAlignment="Center"/>

      </WrapPanel>

    </Expander>

    <!--Src Location Grid-->
    <Border BorderBrush="LightGray" BorderThickness="1" Grid.Column="0" Grid.Row="1" Margin="5, 5, 5, 20">
      <Grid x:Name="SrcLocationGrid" ShowGridLines="False"
            MouseDown="LocationGrid_MouseDown" MouseMove="LocationGrid_MouseMove" MouseWheel="LocationGrid_MouseWheel"
            Background="#00000000">
        <Rectangle x:Name="SrcViewRectangle" HorizontalAlignment="Left" VerticalAlignment="Top"
                   Fill="LightBlue" Opacity="0.5" 
                   Width="{Binding ActualWidth, ElementName=SrcLocationGrid}" 
                   Height="{Binding ActualHeight, ElementName=SrcLocationGrid}"
                   Panel.ZIndex="1"/>
      </Grid>
    </Border>

    <Border Grid.Column="0" Grid.Row="2" Margin="5, 5, 5, 20"
            SizeChanged="LocationGrid_SizeChanged"/>

    <!--Dst Location Grid-->
    <Border BorderBrush="LightGray" BorderThickness="1" Grid.Column="1" Grid.Row="1" Margin="5, 5, 5, 20">
      <Grid x:Name="DstLocationGrid" ShowGridLines="False"
            MouseDown="LocationGrid_MouseDown" MouseMove="LocationGrid_MouseMove" MouseWheel="LocationGrid_MouseWheel"
            Background="#00000000"
            >
        <Rectangle x:Name="DstViewRectangle" HorizontalAlignment="Left" VerticalAlignment="Top"
                   Fill="LightBlue" Opacity="0.5" 
                   Width="{Binding ActualWidth, ElementName=DstLocationGrid}" 
                   Height="{Binding ActualHeight, ElementName=DstLocationGrid}"
                   Panel.ZIndex="1"
                   />
      </Grid>
    </Border>

    <!--Src Grid-->
    <fg:FastGridControl x:Name="SrcDataGrid" Grid.Column="2" Grid.Row="1" Margin="1, 45, 1, 1"
                        IsTransposed="{Binding IsChecked, ElementName=chbIsTransposed1, Mode=TwoWay}"
                        UseClearType="{Binding IsChecked, ElementName=chbClearType1}"
                        IsReadOnly="True"
                        SizeChanged="DataGrid_SizeChanged"
                        SelectedCellsChanged="DataGrid_SelectedCellsChanged"
                        AllowDrop="True"
                        Tag="0"
                        RowHeightReserve="0"
                        >
      <i:Interaction.Behaviors>
        <behavior:DragAcceptBehavior 
                        Description="{Binding DataContext. Description,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
      </i:Interaction.Behaviors>

      <fg:FastGridControl.ContextMenu>
        <ContextMenu>
           <MenuItem Header="{x:Static props:Resources.ContextMenu_SetRowHeader}" Click="SetRowHeader_Click" /> 
           <MenuItem Header="{x:Static props:Resources.ContextMenu_ResetRowHeader}" Click="ResetRowHeader_Click" /> 
           <MenuItem Header="{x:Static props:Resources.ContextMenu_SetColumnHeader}" Click="SetColumnHeader_Click" /> 
           <MenuItem Header="{x:Static props:Resources.ContextMenu_ResetColumnHeader}" Click="ResetColumnHeader_Click" /> 
           <MenuItem Header="{x:Static props:Resources.ContextMenu_DiffAsHeader}" Click="DiffByHeaderSrc_Click" /> 
           <MenuItem Header="{x:Static props:Resources.ContextMenu_BuildCellBaseLog}" Click="BuildCellBaseLog_Click"/> 
           <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyAsTsv}" Click="CopyAsTsv_Clicked"/> 
           <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyAsCsv}" Click="CopyAsCsv_Clicked"/> 
          <!--<MenuItem Header="{x:Static props:Resources.ContextMenu_SaveAll}" Click="SaveAll_Click" />
          <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyRowToAnother}" Click="CopyRow_Click" />
          <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyToAnother}" Click="CopyToAnother_Click" />-->
        </ContextMenu>
      </fg:FastGridControl.ContextMenu>

    </fg:FastGridControl>

    <RichTextBox x:Name="SrcValueTextBox" Grid.Column="2" Grid.Row="1" Height="30" Margin="1" VerticalAlignment="Top"
                 GotFocus="ValueTextBox_GotFocus"
                 LostFocus="ValueTextBox_LostFocus"
                 Focusable="True"
                 VerticalScrollBarVisibility="Auto"
                 HorizontalScrollBarVisibility="Auto"
                 ScrollViewer.ScrollChanged ="ValuteTextBox_ScrollChanged"
                 />

    <GridSplitter Grid.Column="3" Grid.Row="2" Width="5" HorizontalAlignment="Center"/>

    <!--Dst Grid-->
    <fg:FastGridControl x:Name="DstDataGrid" Grid.Column="4" Grid.Row="1" Margin="1, 45, 1, 1" 
                        IsTransposed="{Binding IsChecked, ElementName=chbIsTransposed1, Mode=TwoWay}"
                        UseClearType="{Binding IsChecked, ElementName=chbClearType1}"
                        IsReadOnly="True"
                        SizeChanged="DataGrid_SizeChanged"
                        SelectedCellsChanged="DataGrid_SelectedCellsChanged"
                        AllowDrop="True"
                        Tag="1"
                        RowHeightReserve="0"
                        >
      <i:Interaction.Behaviors>
        <behavior:DragAcceptBehavior 
                        Description="{Binding DataContext. Description,RelativeSource={RelativeSource AncestorType=UserControl}}"/>
      </i:Interaction.Behaviors>

      <fg:FastGridControl.ContextMenu>
        <ContextMenu>
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_SetRowHeader}" Click="SetRowHeader_Click" /> -->
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_ResetRowHeader}" Click="ResetRowHeader_Click" /> -->
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_SetColumnHeader}" Click="SetColumnHeader_Click" /> -->
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_ResetColumnHeader}" Click="ResetColumnHeader_Click" /> -->
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_DiffAsHeader}" Click="DiffByHeaderDst_Click" /> -->
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_BuildCellBaseLog}" Click="BuildCellBaseLog_Click"/> -->
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyAsTsv}" Click="CopyAsTsv_Click" InputGestureText="Ctrl + c"/> -->
          <!-- <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyAsCsv}" Click="CopyAsCsv_Click" InputGestureText="Ctrl + C"/> -->
                    <MenuItem Header="{x:Static props:Resources.ContextMenu_SaveAll}" Click="SaveAll_Click" />
                    <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyRowToAnother}" Click="CopyRow_Click" />
                    <MenuItem Header="{x:Static props:Resources.ContextMenu_CopyToAnother}" Click="CopyToAnother_Click" />
          <!--<MenuItem Header="{x:Static props:Resources.ContextMenu_BuildRowBaseLog}" Click="BuildRowBaseLog_Click"/>
                    <MenuItem Header="{x:Static props:Resources.ContextMenu_BuildColumnBaseLog}" Click="BuildColumnBaseLog_Click"/>-->
        </ContextMenu>
      </fg:FastGridControl.ContextMenu>

    </fg:FastGridControl>

    <RichTextBox x:Name="DstValueTextBox" Grid.Column="4" Grid.Row="1" Height="30" Margin="1" VerticalAlignment="Top"
                 GotFocus="ValueTextBox_GotFocus"
                 LostFocus="ValueTextBox_LostFocus"
                 Focusable="True"
                 VerticalScrollBarVisibility="Auto"
                 HorizontalScrollBarVisibility="Auto"
                 ScrollViewer.ScrollChanged ="ValuteTextBox_ScrollChanged"
                 />

  </Grid>
</UserControl>
